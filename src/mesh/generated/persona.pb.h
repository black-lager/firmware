/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6 */

#ifndef PB_PERSONA_PB_H_INCLUDED
#define PB_PERSONA_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* Used to store all user owned personas and known peer personas */
typedef struct _Wallet { 
    pb_callback_t my_personas;
    pb_callback_t peer_personas;
} Wallet;

/* Stores information about an identity.
 This identity can be the user themself or a peer node.
 Used for digital signatures in the Black Lager messaging application. */
typedef struct _Persona { 
    /* Unique local Persona name */
    pb_callback_t local_name;
    /* Device MAC address */
    pb_callback_t mac_address;
    /* Device node number */
    int32_t node_num;
    /* Used for local owned Persona and peer Personas */
    pb_callback_t public_key;
    /* Only used if this is a local owned Persona */
    pb_callback_t private_key;
    /* Unique byte string representing the Persona */
    pb_callback_t uid;
    /* Used to optionally mutate the uid */
    pb_callback_t mask;
    /* True if the user owns this persona
 False if this is a peer persona */
    bool owned;
} Persona;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Persona_init_default                     {{{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0}
#define Wallet_init_default                      {{{NULL}, NULL}, {{NULL}, NULL}}
#define Persona_init_zero                        {{{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0}
#define Wallet_init_zero                         {{{NULL}, NULL}, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define Wallet_my_personas_tag                   1
#define Wallet_peer_personas_tag                 2
#define Persona_local_name_tag                   1
#define Persona_mac_address_tag                  2
#define Persona_node_num_tag                     3
#define Persona_public_key_tag                   4
#define Persona_private_key_tag                  5
#define Persona_uid_tag                          6
#define Persona_mask_tag                         7
#define Persona_owned_tag                        8

/* Struct field encoding specification for nanopb */
#define Persona_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   local_name,        1) \
X(a, CALLBACK, SINGULAR, STRING,   mac_address,       2) \
X(a, STATIC,   SINGULAR, INT32,    node_num,          3) \
X(a, CALLBACK, SINGULAR, BYTES,    public_key,        4) \
X(a, CALLBACK, SINGULAR, BYTES,    private_key,       5) \
X(a, CALLBACK, SINGULAR, BYTES,    uid,               6) \
X(a, CALLBACK, SINGULAR, BYTES,    mask,              7) \
X(a, STATIC,   SINGULAR, BOOL,     owned,             8)
#define Persona_CALLBACK pb_default_field_callback
#define Persona_DEFAULT NULL

#define Wallet_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  my_personas,       1) \
X(a, CALLBACK, REPEATED, MESSAGE,  peer_personas,     2)
#define Wallet_CALLBACK pb_default_field_callback
#define Wallet_DEFAULT NULL
#define Wallet_my_personas_MSGTYPE Persona
#define Wallet_peer_personas_MSGTYPE Persona

extern const pb_msgdesc_t Persona_msg;
extern const pb_msgdesc_t Wallet_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Persona_fields &Persona_msg
#define Wallet_fields &Wallet_msg

/* Maximum encoded size of messages (where known) */
/* Persona_size depends on runtime parameters */
/* Wallet_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
